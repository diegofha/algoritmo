#include "stdafx.h"
#include "iostream"
#include "conio.h"

using namespace std;

void cargar(int m[20][20], int f,int c)
{
 int x; 
 for(int i=0;i<f;i++)
   for(int j=0;j<c;j++)
   {
	 cout<<"Elemento:";
	 cin>>x;
	 m[i][j]=x;
   }
}

void mostrar(int m[20][20], int f, int c)
{
  for(int i=0;i<f;i++)
  {
    for(int j=0;j<c;j++)
    	 cout<<m[i][j]<<"  ";
    cout<<endl;
  }
}

int multiplicarDiagonal(int m[20][20],int f, int c)
{ 
  int p=1;
  for(int i=0;i<f;i++)
	for(int j=0;j<c;j++)
	{
	    if(i == j)
			p=p * m[i][j];
	}
	return p;
}

int factorial(int n)
{
	if(n==0)
		return 1;
	else{
		float x=factorial(n-1);
		return x*n;
	}
}
int suma(int n)
{
	if(n==0)
		return 0;
	else{
		int s=suma(n-1);
		return suma(n-1)+n;
	}
}
//n=7    1 2 3 4 5 6 7 --->(2+4+6)=12
int sumanumpares(int n)
{
	if(n==0 )
		return 0;
	else{
		int s=sumanumpares(n-1);
		
		if(n%2==0)
			return s+n;
		else
			return s;
	}
}
//n=5  1 2 3 4 5 ---> 2
int contarnumpares(int n)
{
	if(n==0)
		return 0;
	else{
		int s=contarnumpares(n-1);
		
		if(n%2==0)
			return s+1;
		else
			return  s;
	}
}
//n=2   1^2  2^2 -----> 5
int sumacuadrados(int n)
{
	if(n==0)
		return 0;
	else{
		int s=sumacuadrados(n-1);
			return s+(n*n);
	}
}
float sumaserie(float n)
{
	if(n==0)
		return 0;
	else{
		float s=sumaserie(n-1);
			return s+(factorial(n)/(n*n));
	}
}

//
int funcionpotencia(int x,int y)
{
	if(y==0)
		return 1;
	else{
		int a=funcionpotencia(x,y-1);
			return a*x;
	}
}
//mostrar los n primeros numeros naturales
void naturales(int n){

	if(n==0){
	
	}
	else{
	naturales(n-1);
	cout<<n<<" ";
	}

}
//mostrar los n primeros numeros pares invertido
void naturalesinv(int n){
	
	if(n==0){
	
	}
	else{
		cout<<n<<" ";
		naturalesinv(n-1);
	}
}
//mostrar los numeros pares que estan entre n
//ej n=5    2  4

//sumar los digitos de un numero
void mostrarpares(int n){
	
	if(n==0){
	
	}
	else{
	  mostrarpares(n-1);
	  if(n%2==0)
	  cout<<n<<" ";
	}
		
}
int  sumadigitos(int n){
	
	if(n<10){
	return n;
	}
	else{
	int s=sumadigitos(n/10);
    return s+n%10;
	}
		
}
//mostrar los digitos
void mostrardigitos(int n){
	
	if(n<10){
	cout<<n;
	}
	else{
	cout<<" "<<n%10<<" ";
	mostrardigitos(n/10);
    
	}
		
}
//suma de los digitos pares
int sumadedigpares(int n){
	
	if(n<10){
		if(n%2==0)
			return n;
		else
			return 0;

	}
	else{
	int s=sumadedigpares(n/10);  

	    if((n%10)%2==0)
			return s+(n%10);
		else
			return s;
    
	}
		
}

///mostrar la cantidad de digitos pares de un numero 
//ej: 24578     --->3
int cantidaddigpares(int n){
	if(n<10){
		if(n%2==0)
			return 1;
		else
			return 0;
	}
	
	else{
		int c=cantidaddigpares(n/10);
		
		if((n%10)%2==0)
			return c+1;
		else
			return c;
	}
		
}
//encontrar el digito mayor de un numero
int digitomayor(int n){
	if(n<10)
			return n;
	
	else{
		int c=digitomayor(n/10);
		int may;
		if(n%10>c)
			return n%10;
		else
			return c;
	}
		
}

void main()
{
	int f,c,n; 
	/*int m[20][20];
	cout<<"Cantidad filas:";
	cin>>f;
	cout<<"Cantidad columnas:";
	cin>>c;
	cargar(m,f,c);
	mostrar(m,f,c);
	int p=multiplicarDiagonal(m,f,c);
	cout<<p;*/
	cin>>n;
	//naturalesinv(n);
	cout<<endl;
	// mostrarpares(n);
	//cout<<sumadigitos(n);
	//mostrardigitos(n);
	//cout<<cantidaddigpares(n);
	//cout<<sumadedigpares(n);
	cout<<digitomayor(n);
	getch();
}

